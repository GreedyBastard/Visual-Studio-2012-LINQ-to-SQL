#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProiectMedii
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Data")]
	public partial class ProiectDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClasa(Clasa instance);
    partial void UpdateClasa(Clasa instance);
    partial void DeleteClasa(Clasa instance);
    partial void InsertInregistrare(Inregistrare instance);
    partial void UpdateInregistrare(Inregistrare instance);
    partial void DeleteInregistrare(Inregistrare instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    #endregion
		
		public ProiectDataDataContext() : 
				base(global::ProiectMedii.Properties.Settings.Default.DataConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public ProiectDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProiectDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProiectDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProiectDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Clasa> Clasas
		{
			get
			{
				return this.GetTable<Clasa>();
			}
		}
		
		public System.Data.Linq.Table<Inregistrare> Inregistrares
		{
			get
			{
				return this.GetTable<Inregistrare>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clasa")]
	public partial class Clasa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdClasa;
		
		private string _Nume_Clasa;
		
		private string _Descriere;
		
		private System.Nullable<int> _Credite;
		
		private EntitySet<Inregistrare> _Inregistrares;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdClasaChanging(int value);
    partial void OnIdClasaChanged();
    partial void OnNume_ClasaChanging(string value);
    partial void OnNume_ClasaChanged();
    partial void OnDescriereChanging(string value);
    partial void OnDescriereChanged();
    partial void OnCrediteChanging(System.Nullable<int> value);
    partial void OnCrediteChanged();
    #endregion
		
		public Clasa()
		{
			this._Inregistrares = new EntitySet<Inregistrare>(new Action<Inregistrare>(this.attach_Inregistrares), new Action<Inregistrare>(this.detach_Inregistrares));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClasa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdClasa
		{
			get
			{
				return this._IdClasa;
			}
			set
			{
				if ((this._IdClasa != value))
				{
					this.OnIdClasaChanging(value);
					this.SendPropertyChanging();
					this._IdClasa = value;
					this.SendPropertyChanged("IdClasa");
					this.OnIdClasaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Nume Clasa]", Storage="_Nume_Clasa", DbType="VarChar(20)")]
		public string Nume_Clasa
		{
			get
			{
				return this._Nume_Clasa;
			}
			set
			{
				if ((this._Nume_Clasa != value))
				{
					this.OnNume_ClasaChanging(value);
					this.SendPropertyChanging();
					this._Nume_Clasa = value;
					this.SendPropertyChanged("Nume_Clasa");
					this.OnNume_ClasaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descriere", DbType="VarChar(50)")]
		public string Descriere
		{
			get
			{
				return this._Descriere;
			}
			set
			{
				if ((this._Descriere != value))
				{
					this.OnDescriereChanging(value);
					this.SendPropertyChanging();
					this._Descriere = value;
					this.SendPropertyChanged("Descriere");
					this.OnDescriereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credite", DbType="Int")]
		public System.Nullable<int> Credite
		{
			get
			{
				return this._Credite;
			}
			set
			{
				if ((this._Credite != value))
				{
					this.OnCrediteChanging(value);
					this.SendPropertyChanging();
					this._Credite = value;
					this.SendPropertyChanged("Credite");
					this.OnCrediteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clasa_Inregistrare", Storage="_Inregistrares", ThisKey="IdClasa", OtherKey="IdClasa")]
		public EntitySet<Inregistrare> Inregistrares
		{
			get
			{
				return this._Inregistrares;
			}
			set
			{
				this._Inregistrares.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inregistrares(Inregistrare entity)
		{
			this.SendPropertyChanging();
			entity.Clasa = this;
		}
		
		private void detach_Inregistrares(Inregistrare entity)
		{
			this.SendPropertyChanging();
			entity.Clasa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inregistrare")]
	public partial class Inregistrare : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdInregistrare;
		
		private int _IdStudent;
		
		private int _IdClasa;
		
		private EntityRef<Clasa> _Clasa;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdInregistrareChanging(int value);
    partial void OnIdInregistrareChanged();
    partial void OnIdStudentChanging(int value);
    partial void OnIdStudentChanged();
    partial void OnIdClasaChanging(int value);
    partial void OnIdClasaChanged();
    #endregion
		
		public Inregistrare()
		{
			this._Clasa = default(EntityRef<Clasa>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInregistrare", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdInregistrare
		{
			get
			{
				return this._IdInregistrare;
			}
			set
			{
				if ((this._IdInregistrare != value))
				{
					this.OnIdInregistrareChanging(value);
					this.SendPropertyChanging();
					this._IdInregistrare = value;
					this.SendPropertyChanged("IdInregistrare");
					this.OnIdInregistrareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStudent", DbType="Int NOT NULL")]
		public int IdStudent
		{
			get
			{
				return this._IdStudent;
			}
			set
			{
				if ((this._IdStudent != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdStudentChanging(value);
					this.SendPropertyChanging();
					this._IdStudent = value;
					this.SendPropertyChanged("IdStudent");
					this.OnIdStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClasa", DbType="Int NOT NULL")]
		public int IdClasa
		{
			get
			{
				return this._IdClasa;
			}
			set
			{
				if ((this._IdClasa != value))
				{
					if (this._Clasa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClasaChanging(value);
					this.SendPropertyChanging();
					this._IdClasa = value;
					this.SendPropertyChanged("IdClasa");
					this.OnIdClasaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clasa_Inregistrare", Storage="_Clasa", ThisKey="IdClasa", OtherKey="IdClasa", IsForeignKey=true)]
		public Clasa Clasa
		{
			get
			{
				return this._Clasa.Entity;
			}
			set
			{
				Clasa previousValue = this._Clasa.Entity;
				if (((previousValue != value) 
							|| (this._Clasa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clasa.Entity = null;
						previousValue.Inregistrares.Remove(this);
					}
					this._Clasa.Entity = value;
					if ((value != null))
					{
						value.Inregistrares.Add(this);
						this._IdClasa = value.IdClasa;
					}
					else
					{
						this._IdClasa = default(int);
					}
					this.SendPropertyChanged("Clasa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Inregistrare", Storage="_Student", ThisKey="IdStudent", OtherKey="IdStudent", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Inregistrares.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Inregistrares.Add(this);
						this._IdStudent = value.IdStudent;
					}
					else
					{
						this._IdStudent = default(int);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdStudent;
		
		private string _Nume;
		
		private string _Prenume;
		
		private string _Sex;
		
		private System.Nullable<float> _Media;
		
		private EntitySet<Inregistrare> _Inregistrares;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdStudentChanging(int value);
    partial void OnIdStudentChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnPrenumeChanging(string value);
    partial void OnPrenumeChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnMediaChanging(System.Nullable<float> value);
    partial void OnMediaChanged();
    #endregion
		
		public Student()
		{
			this._Inregistrares = new EntitySet<Inregistrare>(new Action<Inregistrare>(this.attach_Inregistrares), new Action<Inregistrare>(this.detach_Inregistrares));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStudent", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdStudent
		{
			get
			{
				return this._IdStudent;
			}
			set
			{
				if ((this._IdStudent != value))
				{
					this.OnIdStudentChanging(value);
					this.SendPropertyChanging();
					this._IdStudent = value;
					this.SendPropertyChanged("IdStudent");
					this.OnIdStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenume", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Prenume
		{
			get
			{
				return this._Prenume;
			}
			set
			{
				if ((this._Prenume != value))
				{
					this.OnPrenumeChanging(value);
					this.SendPropertyChanging();
					this._Prenume = value;
					this.SendPropertyChanged("Prenume");
					this.OnPrenumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Media", DbType="Real")]
		public System.Nullable<float> Media
		{
			get
			{
				return this._Media;
			}
			set
			{
				if ((this._Media != value))
				{
					this.OnMediaChanging(value);
					this.SendPropertyChanging();
					this._Media = value;
					this.SendPropertyChanged("Media");
					this.OnMediaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Inregistrare", Storage="_Inregistrares", ThisKey="IdStudent", OtherKey="IdStudent")]
		public EntitySet<Inregistrare> Inregistrares
		{
			get
			{
				return this._Inregistrares;
			}
			set
			{
				this._Inregistrares.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inregistrares(Inregistrare entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Inregistrares(Inregistrare entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
}
#pragma warning restore 1591
